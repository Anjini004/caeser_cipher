# -*- coding: utf-8 -*-
"""caesar_cipher.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13qnoTsxlc9ggzVrxeIVFrhlkQ0nt86WJ
"""

def encrypt(text, shift):
    """Encrypt the given text using Caesar Cipher with the provided shift value."""
    encrypted_text = ""
    for char in text:
        if char.isalpha():  # Check if the character is a letter
            shift_amount = shift % 26
            start = ord('A') if char.isupper() else ord('a')
            new_char = chr(start + (ord(char) - start + shift_amount) % 26)
            encrypted_text += new_char
        else:
            encrypted_text += char  # Non-letter characters are added as-is
    return encrypted_text

def decrypt(text, shift):
    """Decrypt the given text using Caesar Cipher with the provided shift value."""
    return encrypt(text, -shift)  # Decrypting is the same as encrypting with a negative shift

def main():
    print("Caesar Cipher Encryption/Decryption")
    choice = input("Would you like to (E)ncrypt or (D)ecrypt? ").strip().upper()

    if choice not in ('E', 'D'):
        print("Invalid choice. Please select 'E' to encrypt or 'D' to decrypt.")
        return

    text = input("Enter the message: ")
    shift = int(input("Enter the shift value (integer): "))

    if choice == 'E':
        encrypted_message = encrypt(text, shift)
        print(f"Encrypted message: {encrypted_message}")
    elif choice == 'D':
        decrypted_message = decrypt(text, shift)
        print(f"Decrypted message: {decrypted_message}")

if __name__ == "__main__":
    main()